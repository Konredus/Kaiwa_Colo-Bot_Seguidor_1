#include <AFMotor.h>

AF_DCMotor motor1(1);
AF_DCMotor motor2(2);


#include <NewPing.h>

#define MAX_DISTANCE 100 // Maximum distance (in cm) to ping.

NewPing ultrasonido(A0,A1, MAX_DISTANCE);




//------------Variables del Programa---------
//#define debug

const int frente_izq=A4;
const int frente_der=A3;
const int atras=A2;

const int tiempo_stop=10;
const int tiempo_giro=25;
const int tiempo_atras=10;
const int tiempo_frente=10;

int sensor_izq=0;
int sensor_der=0;
int velmax=150;
int aux=1;
int velocidad=50;

void setup() {
  
#ifdef debug
 Serial.begin(9600);
#endif

 pinMode(MOTORLATCH, OUTPUT);
  pinMode(MOTORENABLE, OUTPUT);
  pinMode(MOTORDATA, OUTPUT);
  pinMode(MOTORCLK, OUTPUT);

  pinMode(10, INPUT);
  pinMode(A4, INPUT);
  pinMode(A3, INPUT);
}

void loop() {

  while(digitalRead(10)==LOW)
{
  #ifdef debug
    Serial.print("Boton Arranque\n");
  #endif
  
     delay(50);
}

while(1)
{

  #ifdef debug
    Serial.print("\nIZQ= ");
    Serial.print(analogRead (A4));
    Serial.print("\tDER= ");
    Serial.print(analogRead (A3));
   #endif

 if ((digitalRead(A4)==LOW)&&(digitalRead (A3)==LOW))   //Movimiento hacia el frente
  { 
    movimiento_frente();
   }
  if ((digitalRead(A4)==HIGH)&&(digitalRead (A3)==LOW))  //Movimiento hacia la izquierda
  { aux=0;
    movimiento_stop();
    delay (tiempo_stop);
    velocidad =95 ;
    movimiento_izq();
    delay(tiempo_giro);
    movimiento_stop();
    delay (tiempo_stop);
   }
   
  if ((digitalRead(A4)==LOW)&&(digitalRead (A3)==HIGH)) //Movimiento hacia la derecha
  {
     aux=0;
    movimiento_stop(); 
    delay (tiempo_stop);
    velocidad = 95;
    movimiento_der();
    delay (tiempo_giro);
    movimiento_stop();
    delay (tiempo_stop);
   }
 }
}
 //-------------Definicion de libreria de movimiento ------------

 void movimiento_stop(void)
{

  motor1.setSpeed(velocidad);  
  motor2.setSpeed(velocidad); 
  motor1.run(RELEASE);
  motor2.run(RELEASE);
}

void movimiento_frente(void)
{ if(velocidad<velmax)    aux++;
  velocidad=velocidad+aux;
   motor1.setSpeed(velocidad);  
 motor2.setSpeed(velocidad); 
  motor1.run(BACKWARD);
  motor2.run(BACKWARD);
}

void movimiento_atras(void)
{
   motor1.setSpeed(velocidad);  
   motor2.setSpeed(velocidad); 
  motor1.run(FORWARD);
  motor2.run(FORWARD);
}

void movimiento_der(void)
{
   motor1.setSpeed(velocidad);  
   motor2.setSpeed(velocidad); 
   motor1.run(BACKWARD);
   motor2.run(FORWARD);
}

void movimiento_izq(void)
{
   motor1.setSpeed(velocidad);  
   motor2.setSpeed(velocidad); 
    motor1.run(FORWARD);
    motor2.run(BACKWARD);
}
